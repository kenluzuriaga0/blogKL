---
import config from "@/config/config.json";

const {
  theme_switcher,
  default_theme,
}: { theme_switcher: boolean; default_theme: string } = config.settings;
const { className }: { className?: string } = Astro.props;
---

{
  theme_switcher && (
    <div class={`theme-switcher ${className}`}>
      <button aria-label="theme-switch" type="button" data-theme-switcher>
        <svg
          class="transition rotate-[130deg]"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 15 15"
          width="20"
          height="20"
          stroke-linecap="round"
          strokel-inejoin="round"
          fill="none"
          stroke="#000"
        >
          <mask id="m">
            <circle class="masker" cx="7.5" cy="7.5" r="8.5" fill="#fff" />
          </mask>
          <g mask="url(#m)">
            <path
              class="sun"
              d="M7.5 1.5v-1m0 13.99v-.998m6-5.997h1m-13 0h-1m2-4.996l-1-1m12 0l-1 1m-10 9.993l-1 1m12 0l-1-1m-2-4.997a2.999 2.999 0 01-3 2.998 2.999 2.999 0 113-2.998z"
            />
          </g>
          <path
            class="moon"
            fill="white"
            d="M1.66 11.362A6.5 6.5 0 007.693.502a7 7 0 11-6.031 10.86z"
          />
        </svg>
      </button>
    </div>
  )
}

<script>
  import { settings } from "@/config/config.json";
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");

  matchMedia.addEventListener("change", () =>
    toggleTheme(document.querySelectorAll("[data-theme-switcher]")),
  );

  function toggleTheme(themeSwitch: NodeListOf<Element>) {
    const defaulTheme =
      settings.default_theme === "system"
        ? matchMedia.matches
          ? "dark"
          : "light"
        : settings.default_theme;
    const currentTheme = localStorage.getItem("theme") || defaulTheme;
    const isDarkTheme = currentTheme === "dark";
    themeSwitch.forEach((sw: any) => (sw.checked = isDarkTheme));
    document.documentElement.classList.toggle("dark", isDarkTheme);
  }

  const setDarkMode = () => {
    const themeSwitch = document.querySelectorAll("[data-theme-switcher]");
    toggleTheme(themeSwitch);
    themeSwitch.forEach((sw) => {
      sw.addEventListener("click", function () {
        const defaulTheme =
          settings.default_theme === "system"
            ? matchMedia.matches
              ? "dark"
              : "light"
            : settings.default_theme;
        const currentTheme = localStorage.getItem("theme") || defaulTheme;
        const newTheme = currentTheme === "light" ? "dark" : "light";
        localStorage.setItem("theme", newTheme);
        toggleTheme(themeSwitch);
      });
    });
  };

  // Runs on initial navigation
  setDarkMode();
  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", setDarkMode);
</script>
